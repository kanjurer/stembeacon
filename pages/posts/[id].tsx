import type { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { ParsedUrlQuery } from "querystring";
import BlogLayout from "../../components/BlogLayout";
import { IBlog } from "../../lib/interfaces/blog";
import { getAllPostIds, getPostData } from "../../lib/posts";

interface BlogPostProps {
    postData: IBlog;
}

const BlogPost: NextPage<BlogPostProps> = ({ postData }) => {
    return (
        <BlogLayout>
            <Head>
                <title>{postData.title}</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main dangerouslySetInnerHTML={{ __html: postData.contentHtml }} />
        </BlogLayout>
    );
};

export default BlogPost;

interface Params extends ParsedUrlQuery {
    id: string;
}

export const getStaticPaths: GetStaticPaths<Params> = async () => {
    const paths = getAllPostIds();
    return {
        paths,
        fallback: false,
    };
};

export const getStaticProps: GetStaticProps<BlogPostProps, Params> = async ({
    params,
}) => {
    // Fetch necessary data for the blog post using params.id
    const postData = await getPostData(params?.id ?? "");
    return {
        // Passed to the page component as props
        props: {
            postData,
        },
    };
};
